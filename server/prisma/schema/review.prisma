model Review {
  id            String   @id @default(cuid())
  rhymes        Int      @db.SmallInt
  structure     Int      @db.SmallInt
  realization   Int      @db.SmallInt
  individuality Int      @db.SmallInt
  atmosphere    Int      @db.SmallInt
  total         Int      @db.SmallInt
  title         String?  @db.VarChar(100)
  text          String?  @db.VarChar(8500)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  releaseId     String   @map("release_id")
  userId        String   @map("user_id")

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  release Release @relation(fields: [releaseId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  userFavReviews UserFavReview[]

  @@unique([userId, releaseId])
  @@map("Reviews")
}

model ReleaseRating {
  id                  String @id @default(cuid())
  total               Int    @db.SmallInt
  releaseId           String @map("release_id")
  releaseRatingTypeId String @map("release_rating_type_id")

  releaseRatingType ReleaseRatingType @relation(fields: [releaseRatingTypeId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  release Release @relation(fields: [releaseId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  releaseRatingDetails ReleaseRatingDetails[]

  @@unique([releaseId, releaseRatingTypeId])
  @@map("Release_ratings")
}

model ReleaseRatingDetails {
  rhymes          Float
  structure       Float
  realization     Float
  individuality   Float
  atmosphere      Float
  releaseRatingId String @id @map("release_rating_id")

  releaseRating ReleaseRating @relation(fields: [releaseRatingId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("Release_rating_details")
}

model ReleaseRatingType {
  id   String @id @default(cuid())
  type String @unique @db.VarChar(40)

  releaseRating ReleaseRating[]

  @@map("Release_rating_types")
}
