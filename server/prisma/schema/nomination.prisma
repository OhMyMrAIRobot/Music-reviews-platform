model NominationType {
  id   String @id @default(cuid())
  type String @unique @db.VarChar(60)

  nomitationVote                   NomitationVote[]
  nominationTypeAllowedAuthorType  NominationTypeAllowedAuthorType[]
  nominationTypeAllowedReleaseType NominationTypeAllowedReleaseType[]

  @@map("Nomination_types")
}

model NominationTypeAllowedAuthorType {
  nominationTypeId String @map("nomination_type_id")
  authorTypeId     String @map("author_type_id")

  nominationType NominationType @relation(fields: [nominationTypeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  authorType     AuthorType     @relation(fields: [authorTypeId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([nominationTypeId, authorTypeId])
  @@map("Nomination_type_allowed_author_types")
}

model NominationTypeAllowedReleaseType {
  nominationTypeId String @map("nomination_type_id")
  releaseTypeId    String @map("release_type_id")

  nominationType NominationType @relation(fields: [nominationTypeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  releaseType    ReleaseType    @relation(fields: [releaseTypeId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([nominationTypeId, releaseTypeId])
  @@map("Nomination_type_allowed_release_types")
}

model NomitationVote {
  id               String   @id @default(cuid())
  userId           String?  @map("user_id")
  nominationTypeId String   @map("nomination_type_id")
  year             Int
  month            Int
  authorId         String?  @map("author_id")
  releaseId        String?  @map("release_id")
  createdAt        DateTime @default(now()) @map("created_at")

  user           User?          @relation(fields: [userId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  nominationType NominationType @relation(fields: [nominationTypeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  author         Author?        @relation(fields: [authorId], references: [id], onDelete: SetNull, onUpdate: Cascade)
  release        Release?       @relation(fields: [releaseId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  @@unique([userId, nominationTypeId, year, month])
  @@map("Nomination_votes")
}
