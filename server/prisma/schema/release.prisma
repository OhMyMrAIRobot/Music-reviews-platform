model Release {
  id            String   @id @default(cuid())
  title         String   @db.VarChar(50)
  publishDate   DateTime @map("publish_date")
  img           String   @default("") @db.VarChar(255)
  releaseTypeId String   @map("release_type_id")
  createdAt     DateTime @default(now()) @map("created_at")

  ReleaseType ReleaseType @relation(fields: [releaseTypeId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  ReleaseProducer ReleaseProducer[]
  ReleaseArtist   ReleaseArtist[]
  ReleaseDesigner ReleaseDesigner[]
  Review          Review[]
  ReleaseRating   ReleaseRating[]
  UserFavRelease  UserFavRelease[]
  ReleaseMedia    ReleaseMedia[]

  @@map("Releases")
}

model ReleaseType {
  id      String    @id @default(cuid())
  type    String    @unique @db.VarChar(30)
  Release Release[]

  @@map("Release_types")
}

model ReleaseProducer {
  releaseId String @map("release_id")
  authorId  String @map("author_id")

  release Release @relation(fields: [releaseId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  author Author @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([releaseId, authorId])
  @@map("Release_producers")
}

model ReleaseArtist {
  releaseId String @map("release_id")
  authorId  String @map("author_id")

  release Release @relation(fields: [releaseId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  author Author @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([releaseId, authorId])
  @@map("Release_artists")
}

model ReleaseDesigner {
  releaseId String @map("release_id")
  authorId  String @map("author_id")

  release Release @relation(fields: [releaseId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  author Author @relation(fields: [authorId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([releaseId, authorId])
  @@map("Release_designers")
}

model ReleaseMedia {
  id                   String   @id @default(cuid())
  title                String   @db.VarChar(100)
  url                  String   @unique @db.VarChar(255)
  releaseId            String   @map("release_id")
  userId               String?  @map("user_id")
  releaseMediaTypeId   String   @map("release_media_type_id")
  releaseMediaStatusId String   @map("release_media_status_id")
  createdAt            DateTime @default(now()) @map("created_at")

  release            Release            @relation(fields: [releaseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  user               User?              @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  releaseMediaType   ReleaseMediaType   @relation(fields: [releaseMediaTypeId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  releaseMediaStatus ReleaseMediaStatus @relation(fields: [releaseMediaStatusId], references: [id])

  @@unique([releaseId, userId])
  @@map("Release_media")
}

model ReleaseMediaType {
  id           String         @id @default(cuid())
  type         String         @db.VarChar(30)
  ReleaseMedia ReleaseMedia[]

  @@map("Release_media_types")
}

model ReleaseMediaStatus {
  id           String         @id @default(cuid())
  status       String         @db.VarChar(30)
  ReleaseMedia ReleaseMedia[]

  @@map("Release_media_statuses")
}
